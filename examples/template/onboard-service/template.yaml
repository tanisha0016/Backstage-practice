apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: onboard-service
  title: Onboard New Service
  description: Collects details
  owner: my-team
spec:
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Service info
      required:
        - OMD Service Name
        - OMD Component
        - Environment
        - Region
        - Cluster Type
        

      properties:
        OMD Service Name:
          title: OMD Service Name
          type: string
          description: Unique name of the service
          # ui:autofocus: true
          # ui:options:
          #   rows: 5
        OMD Component:
          title: OMD Component
          type: string
          description: Unique name of the component

        Environment:
          title: Environment
          type: string
          
          enum:
           - dev
           - int
           - stage
           - prod
          enumNames:
           - dev
           - int
           - stage
           - prod
          description: dev /int/ stage / prod

        Region:
          title: Region
          type: string
          enum:
           - dev
           - int
           - stage
           - prod
          enumNames:
           - dev
           - int
           - stage
           - prod
          description: AWS region

        Cluster Type:
          title: Cluster Type
          type: string
          enum:
           - boltapi
           - bolto11y
          enumNames:
           - boltapi
           - bolto11y
          description: boltapi / bolto11y

        Service Description:
          title: Service Description
          type: string
          description: For documentation purposes
          ui:options:
            rows: 5

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./content
        values:
          name: ${{ parameters.name }}

    # This step publishes the contents of the working directory to GitHub.
    # If you or your organization prefer another default branch name over 'main'
    # you can change that here.
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: 'main'

    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
